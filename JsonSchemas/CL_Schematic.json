{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "https://raw.githubusercontent.com/budak7273/ContentLib_Documentation/main/JsonSchemas/CL_Schematic.json",
    "title": "ContentLib Schematic",
    "description": "ContentLib Schematic struct definitions can be made from this JSON, and when converted to JSON, will follow this form.",
    "$comment": "This is NOT a copy-paste template! Check the docs to see how to use this! https://docs.ficsit.app/contentlib/latest/index.html",
    "type": "object",
    "additionalProperties": false,
    "properties": {
        "Name": {
            "type": "string",
            "description": "The in-game name of our schematic, exactly as it is displayed to the user."
        },
        "Type": {
            "type": "string",
            "description": "Determines if the schematic is part of the tutorial system or if it's a Milestone/etc.",
            "enum": [
                "Custom",
                "Cheat",
                "Tutorial",
                "Milestone",
                "Alternate",
                "Story",
                "MAM",
                "ResourceSink",
                "HardDrive",
                "Prototype"
            ]
        },
        "VisualKit": {
            "type": "string",
            "description": "Name of the Visual Kit to use. If you want to refer to the kit of an existing asset, use its descriptor name, with the _C suffix. TODO test if base-game schematics get kits genned?",
            "examples": [
                "Desc_OreGold_C",
                "Desc_Water_C",
                "Kit_MyCustomVisualKitName"
            ]
        },
        "Description": {
            "type": "string",
            "description": "A text description to display along with the schematic. As of Update 5, only AWESOME Shop schematics actually display this field anywhere in-game."
        },
        "Cost": {
            "type": "array",
            "description": "ItemAmounts which form the unlock cost. Nog's Research mod must be used if you want to submit fluid item types. See 'ClearCost' to append cost of replace.",
            "items": {
                "$ref": "./Components/CL_ItemAmount.json"
            }
        },
        "Category": {
            "type": "string",
            "$comment": "TODO mention ClearCats",
            "description": "Defines the category in which this schematic gets grouped into. Only AWESOME Shop schematics actually use this field. Either a base-game category, or a string which ContentLib will automatically turn into a category for you.",
            "minLength": 1,
            "examples": [
                "SC_RSS_Parts",
                "MyCustomAutoCreatedCategory"
            ]
        },
        "SubCategories": {
            "type": "array",
            "$comment": "TODO mention ClearCats",
            "items": {
                "type": "string",
                "description": "Defines the SUB-category in which this schematic gets grouped into. Only AWESOME Shop schematics actually use this field. Either a base-game category, or a string which ContentLib will automatically turn into a category for you.",
                "examples": [
                    "SC_RSS_Biomass"
                ]
            }
        },
        "DependsOn": {
            "type": "array",
            "$comment": "TODO mention ClearDeps"
        },
        "MenuPriority": {
            "type": "number"
        },
        "Time": {
            "type": "number"
        },
        "Tier": {
            "type": "integer",
            "minimum": 0
        },
        "InventorySlotsToGive": {
            "type": "integer"
        },
        "ArmSlotsToGive": {
            "type": "integer"
        },
        "Recipes": {
            "type": "array"
        },
        "ItemsToGive": {
            "type": "array",
            "description": "Items to give the player upon schematic purchase, only tested with Resource Sink (AWESOME Shop) schematics.",
            "items": {
                "$ref": "./Components/CL_ItemAmount.json"
            }
        },
        "ClearCats": {
            "type": "boolean",
            "description": "TODO"
        },
        "ClearCost": {
            "type": "boolean",
            "description": "TODO"
        },
        "ClearRecipes": {
            "type": "boolean",
            "description": "TODO"
        },
        "ClearDeps": {
            "type": "boolean",
            "description": "TODO"
        },
        "ClearItemsToGive": {
            "type": "boolean",
            "description": "TODO"
        },
        "ResearchTree": {
            "description": "I (Robb) have not investigated this field to find out if it still works. See https://github.com/Nogg-aholic/ContentLib/blob/master/Source/ContentLib/Private/CLSchematicBPFLib.cpp if you want to try it."
        }
    },
    "patternProperties": {
        "schema": {
            "$comment": "Allow the $schema line in files",
            "type": "string"
        },
        "comment": {
            "$comment": "Allow the $comment line in files",
            "type": "string"
        }
    }
}